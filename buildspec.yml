version: 0.2

phases:
  pre_build:
    commands:
      - echo "Installing Terraform..."
      - wget https://releases.hashicorp.com/terraform/1.6.3/terraform_1.6.3_linux_amd64.zip
      - unzip terraform_1.6.3_linux_amd64.zip
      - mv terraform /usr/local/bin/
      - terraform -version
      - pip install semgrep
      - semgrep --config=p/ci --error

  build:
    commands:
      - terraform init
      - terraform plan -out=tfplan
      - terraform apply -auto-approve tfplan
      - APP_PUBLIC_DNS=$(terraform output -raw app_dns)

  post_build:
    commands:
      - echo "Waiting for app at $APP_PUBLIC_DNS..."
      - for i in {1..10}; do
          if curl -s --head http://$APP_PUBLIC_DNS | grep "200 OK"; then
            echo "App is up!";
            break;
          else
            echo "Waiting...";
            sleep 10;
          fi
        done
      - mkdir -p zap_output
      - chmod 777 zap_output
      - docker run --rm -v $(pwd)/zap_output:/zap/wrk/:rw zaproxy/zap-stable zap-baseline.py \
        -t http://$APP_PUBLIC_DNS -r zap_report.html -w zap_warnings.md || export ZAP_EXIT=$?

      # Default ZAP_EXIT to 0 if not set
      - export ZAP_EXIT=${ZAP_EXIT:-$?}

      # Pass if ZAP exit code is 0 (no issues) or 3 (warnings only)
      - |
        if [ "$ZAP_EXIT" -eq 0 ] || [ "$ZAP_EXIT" -eq 3 ]; then
          echo "Only warnings or no issues detected. Continuing pipeline.";
        else
          echo "Critical issues detected. Failing pipeline.";
          exit 1;
        fi
      - terraform destroy -auto-approve
     

artifacts:
  files:
    - zap_output/zap_report.html
    - zap_output/zap_warnings.md